name: CI/CD

on:
  push:
    branches: [ main ]

jobs:
  test-and-build:
    name: Test & Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: [ frontend, backend ]
    defaults:
      run:
        working-directory: ${{ matrix.dir }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Build (for caching/artifacts)
        run: npm run build

  deploy:
    name: Deploy via Docker Compose
    needs: test-and-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start SSH agent
        uses: webfactory/ssh-agent@v0.10.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy with Docker Compose
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DO_SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e

            # go to your app folder
            cd /var/www/webshop

            # pull latest code
            git pull origin main

            # optionally, export your env-file path
            export ENV_FILE=".env"

            # bring up all services (db, backend, frontend, nginx)
            docker-compose --project-name ${COMPOSE_PROJECT_NAME:-webshop} \
              -f docker-compose.yml up -d --build

            # prune dangling images (optional)
            docker image prune -f