server {
    listen 80;
    server_name localhost;

    # ───────────────────────────────────────────────
    # 0) Global security headers (applied to all responses)
    # ───────────────────────────────────────────────
    add_header X-Frame-Options               "DENY"                      always;
    add_header X-Content-Type-Options        "nosniff"                   always;
    add_header Referrer-Policy               "strict-origin-when-cross-origin" always;
    add_header X-XSS-Protection              "1; mode=block"             always;
    add_header Permissions-Policy            "geolocation=(), microphone=()" always;
    
    # Increase for file uploads
    client_max_body_size 50M;
    
    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # ───────────────────────────────────────────────
    # 1) Static assets caching (Next.js _next/static)
    # ───────────────────────────────────────────────
    location /_next/static/ {
        proxy_pass http://frontend:3000;
        proxy_cache_valid 200 1y;
        add_header Cache-Control "public, immutable, max-age=31536000";
        
        # Security headers for static assets
        add_header X-Frame-Options               "DENY"                      always;
        add_header X-Content-Type-Options        "nosniff"                   always;
    }
    
    # ───────────────────────────────────────────────
    # 2) API routes → backend
    # ───────────────────────────────────────────────
    location /api/ {
        proxy_pass         http://backend:3001;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection 'upgrade';
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   X-Forwarded-Host $host;
        
        # Cookie handling
        proxy_set_header   Cookie $http_cookie;
        # proxy_cookie_path  / /;
        # proxy_cookie_domain backend localhost;
        
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts for API calls
        proxy_connect_timeout       60s;
        proxy_send_timeout          60s;
        proxy_read_timeout          60s;
        
        # CORS headers for API
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Origin' '$http_origin' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,Accept' always;
          add_header Content-Security-Policy 
            "default-src 'self'; \
            script-src 'self' 'unsafe-inline' http://localhost:3000; \  
            style-src 'self' 'unsafe-inline'; \
            img-src 'self' data: blob:; \
            connect-src 'self' http://localhost:4000; \    
            font-src 'self';";
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Origin' '$http_origin';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,Accept';
            add_header 'Access-Control-Max-Age' 86400;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # ───────────────────────────────────────────────
    # 3) Health check endpoint
    # ───────────────────────────────────────────────
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }

    # ───────────────────────────────────────────────
    # 4) Next.js production app → frontend
    # (Removed HMR since we're in production mode)
    # ───────────────────────────────────────────────
    location / {
        proxy_pass         http://frontend:3000;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection 'upgrade';
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   X-Forwarded-Host $host;
        
        # Cookie handling
        proxy_set_header   Cookie $http_cookie;
        proxy_cookie_path  / /;
        
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout       30s;
        proxy_send_timeout          30s;
        proxy_read_timeout          30s;
        
        # Enable buffering for better performance
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # Cache for HTML pages (short cache)
        location ~* \.(html?)$ {
            proxy_pass http://frontend:3000;
            add_header Cache-Control "public, max-age=300";
            
            # All proxy headers
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   X-Forwarded-Host $host;
        }
        
        # Cache for images, CSS, JS (longer cache)
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend:3000;
            add_header Cache-Control "public, max-age=31536000";
            
            # All proxy headers
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   X-Forwarded-Host $host;
        }
    }

    # ───────────────────────────────────────────────
    # 5) Error pages
    # ───────────────────────────────────────────────
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}