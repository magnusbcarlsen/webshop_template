services:
  db:
    image: mysql:8.0
    restart: always
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - ./database:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app-net

  backend:
    build: ./backend

    ports:
      - "3001:3001"
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USERNAME=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_DATABASE=${MYSQL_DATABASE}
      - PORT=${PORT}
      - FRONTEND_URL=${FRONTEND_URL}
      - NODE_ENV=development
      - NODE_OPTIONS=--max-old-space-size=1024
    working_dir: /app
    command: >
      sh -c "npx nest build &&
             npx nest start --watch"
    volumes:
      - ./backend:/app:delegated
      - backend_node_modules:/app/node_modules
    depends_on:
      - db
    networks:
      - app-net

  frontend:
    mem_limit: 4g
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    command: >
      sh -c "npm run dev -- --port 3000 --hostname 0.0.0.0"
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - BACKEND_URL=${BACKEND_URL}
      - NODE_ENV=development
      # - CHOKIDAR_USEPOLLING=false
      # - CHOKIDAR_INTERVAL=5000
      # - WATCHPACK_POLLING=false
      - NODE_OPTIONS=--max-old-space-size=2048
    working_dir: /app
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
      - frontend_next_cache:/app/.next
    depends_on:
      - backend
    networks:
      - app-net

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-net

volumes:
  mysql_data:
  backend_node_modules:
  frontend_node_modules:
  frontend_next_cache:

networks:
  app-net:
    driver: bridge
