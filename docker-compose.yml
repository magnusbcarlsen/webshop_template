version: "3.8"

services:
  db:
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - ./database:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    env_file:
      - .env
    networks:
      - app-net

  backend:
    build: ./backend
    ports:
      - "3001:3001"
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - DB_USER=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - DB_NAME=${MYSQL_DATABASE}
      - PORT=3001
    depends_on:
      - db
    networks:
      - app-net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: npm run dev              # ensures HMR
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app                # bindâ€‘mount source
      - /app/node_modules             # anonymous volume for node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true      # force polling across Docker mounts
      - CHOKIDAR_INTERVAL=100         # poll every 100ms (optional)
    depends_on:
      - backend
    networks:
      - app-net

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-net

volumes:
  mysql_data:

networks:
  app-net:
    driver: bridge
