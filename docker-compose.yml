services:
  db:
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=secretPassword
      - MYSQL_USER=magnus
      - MYSQL_PASSWORD=secretPassword
      - MYSQL_DATABASE=webshop
    volumes:
      - ./database:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app-net

  backend:
    image: node:20-alpine
    working_dir: /app
    mem_limit: 2g
    command: >
      sh -c "
      npm ci &&
      npx nest start --watch
      "
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    ports:
      - "3001:3001"
    env_file:
      - .env
      - .env.local
    environment:
      - NODE_ENV=development
      - NODE_OPTIONS=--max-old-space-size=1024
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USERNAME=magnus
      - DB_PASSWORD=secretPassword
      - DB_DATABASE=webshop
      - PORT=3001
      - do_spaces_endpoint=http://minio:9000
      - do_spaces_region=us-east-1
      - do_spaces_bucket=products
      - do_spaces_key=minioadmin
      - do_spaces_secret=minioadmin123
    depends_on:
      - db
      - minio
      - createbuckets
    networks:
      - app-net

  frontend:
    mem_limit: 4g
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    command: >
      sh -c "npm run dev -- --port 3000 --hostname 0.0.0.0"
    ports:
      - "3000:3000"
    env_file:
      - .env
      - .env.local
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=1000
      - WATCHPACK_POLLING=true
      - NODE_OPTIONS=--max-old-space-size=2048
    working_dir: /app
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
      - frontend_next_cache:/app/.next
    depends_on:
      - backend
    networks:
      - app-net

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-net

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - app-net

  createbuckets:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      echo 'Waiting for MinIO to be ready...';
      sleep 5;
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin123;
      /usr/bin/mc mb myminio/products --ignore-existing;
      /usr/bin/mc anonymous set public myminio/products;
      /usr/bin/mc ls myminio/products;
      echo 'Bucket setup complete';
      exit 0;
      "
    networks:
      - app-net

volumes:
  mysql_data:
  minio_data:
  backend_node_modules:
  frontend_node_modules:
  frontend_next_cache:

networks:
  app-net:
    driver: bridge
